import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './css/CreditModal.css';
import { FiCreditCard, FiClock, FiZap, FiUser } from 'react-icons/fi';

const API_URL = process.env.REACT_APP_API_URL || "http://localhost:8080/api";
const LOW_CREDIT_THRESHOLD = 100;

// --- Component 1: Credit Balance ---
const CreditBalanceView = ({ remainingCredit, errorMessage, onRefresh, onClose }) => (
  <div className="modal-content-area">
    <h3 className="content-title">S·ªë d∆∞ Credit Hi·ªán t·∫°i</h3>

    <div className={`balance-display ${remainingCredit < LOW_CREDIT_THRESHOLD ? 'low-credit' : ''}`}>
      <p className="current-balance-text">S·ªë d∆∞ c·ªßa b·∫°n:</p>
      <strong>{remainingCredit !== null ? remainingCredit : 'ƒêang t·∫£i...'} credits</strong>
      {remainingCredit !== null && remainingCredit < LOW_CREDIT_THRESHOLD && (
        <p className="warning-message">‚ö†Ô∏è Credit c·ªßa b·∫°n ƒëang th·∫•p! Vui l√≤ng mua th√™m.</p>
      )}
    </div>

    {errorMessage && (
      <div className="error-section">
        <p>L·ªói t·∫£i credit: {errorMessage}</p>
        {remainingCredit !== null && <p className="cached-value-note">(Gi√° tr·ªã cache: {remainingCredit})</p>}
        <button className="refresh-btn" onClick={onRefresh}>Th·ª≠ t·∫£i l·∫°i üîÑ</button>
      </div>
    )}

    <hr className="my-4" />
    <Link to="/pricing" onClick={onClose} className="buy-credit-btn-small">
      Mua th√™m credit ‚Üí
    </Link>
  </div>
);

// --- Component 2: Credit History (ƒë√£ t√≠ch h·ª£p API th·∫≠t) ---
const CreditHistoryView = ({ userId, token }) => {
  const [history, setHistory] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    const fetchHistory = async () => {
      if (!userId) return;
      setLoading(true);
      try {
        const res = await fetch(`${API_URL}/credit/history/${userId}`, {
          headers: { Authorization: `Bearer ${token}` },
        });
        if (!res.ok) throw new Error("L·ªói t·∫£i l·ªãch s·ª≠ credit");
        const data = await res.json();
        setHistory(Array.isArray(data) ? data : []);
      } catch (err) {
        console.error("‚ùå L·ªói l·∫•y l·ªãch s·ª≠:", err);
        setError("Kh√¥ng th·ªÉ t·∫£i l·ªãch s·ª≠ giao d·ªãch.");
      } finally {
        setLoading(false);
      }
    };
    fetchHistory();
  }, [userId, token]);

  if (loading) return <p>ƒêang t·∫£i l·ªãch s·ª≠...</p>;
  if (error) return <p className="error-message">{error}</p>;
  if (history.length === 0) return <p className="no-data">Ch∆∞a c√≥ giao d·ªãch credit n√†o.</p>;

  return (
    <div className="modal-content-area">
      <h3 className="content-title">üìú L·ªãch s·ª≠ Giao d·ªãch Credit</h3>
      <table className="credit-history-table">
        <thead>
          <tr>
            <th>Th·ªùi gian</th>
            <th>M√¥ t·∫£</th>
            <th>Thay ƒë·ªïi</th>
          
          </tr>
        </thead>
        <tbody>
          {history.map((t, i) => (
            <tr key={i}>
              <td>{new Date(t.timestamp || t.createdAt).toLocaleString("vi-VN")}</td>
              <td>{t.description || "-"}</td>
              <td className={t.amount < 0 ? "negative" : "positive"}>
                {t.amount > 0 ? `+${t.amount}` : `-${Math.abs(t.amount)}`}
              </td>


            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

// --- Component 3: Subscription/Plans ---
const SubscriptionView = ({ onClose }) => (
  <div className="modal-content-area">
    <h3 className="content-title">Qu·∫£n l√Ω G√≥i N√¢ng c·∫•p</h3>
    <div className="subscription-info">
      <p>B·∫°n ƒëang s·ª≠ d·ª•ng: <strong>G√≥i C∆° B·∫£n (Mi·ªÖn ph√≠)</strong></p>
      <p>Credit ƒë∆∞·ª£c c·∫•p h√†ng ng√†y: <strong>100 credits</strong></p>
      <hr />
      <p>
        ƒê·ªÉ c√≥ tr·∫£i nghi·ªám t·ªët h∆°n v√† credit kh√¥ng gi·ªõi h·∫°n, h√£y n√¢ng c·∫•p l√™n g√≥i <strong>PRO</strong>.
      </p>
      <Link to="/pricing" onClick={onClose} className="upgrade-btn">
        Xem chi ti·∫øt c√°c G√≥i & N√¢ng c·∫•p ngay! ‚ú®
      </Link>
    </div>

    <h3 className="content-title mt-4">Th√¥ng tin Thanh to√°n</h3>
    <p className="payment-placeholder">Qu·∫£n l√Ω c√°c giao d·ªãch mua g√≥i/credit ƒë√£ th·ª±c hi·ªán.</p>
  </div>
);

// --- Main Modal ---
function CreditModal({ remainingCredit, errorMessage, onClose, onRefresh, userId }) {
  const [activeTab, setActiveTab] = useState('creditBalance');
  const token = localStorage.getItem("token");

  const renderContent = () => {
    switch (activeTab) {
      case 'creditBalance':
        return (
          <CreditBalanceView
            remainingCredit={remainingCredit}
            errorMessage={errorMessage}
            onRefresh={onRefresh}
            onClose={onClose}
          />
        );
      case 'creditHistory':
        return <CreditHistoryView userId={userId} token={token} />;
      case 'subscription':
        return <SubscriptionView onClose={onClose} />;
      default:
        return null;
    }
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="credit-modal large-modal" onClick={(e) => e.stopPropagation()}>
        <button className="modal-close-btn" onClick={onClose}>&times;</button>

        <div className="modal-header">
          <h2 className="modal-main-title">Credit</h2>
        </div>

        <div className="modal-body-container">
          <div className="modal-sidebar">
            <div
              className={`sidebar-item ${activeTab === 'creditBalance' ? 'active' : ''}`}
              onClick={() => setActiveTab('creditBalance')}
            >
              <FiCreditCard size={20} />
              <span>S·ªë d∆∞ Credit</span>
            </div>
            <div
              className={`sidebar-item ${activeTab === 'creditHistory' ? 'active' : ''}`}
              onClick={() => setActiveTab('creditHistory')}
            >
              <FiClock size={20} />
              <span>L·ªãch s·ª≠ Tr·ª´ Credit</span>
            </div>
            <div
              className={`sidebar-item ${activeTab === 'subscription' ? 'active' : ''}`}
              onClick={() => setActiveTab('subscription')}
            >
              <FiZap size={20} />
              <span>G√≥i N√¢ng c·∫•p</span>
            </div>
            <div className="sidebar-item disabled">
              <FiUser size={20} />
              <span>T√†i kho·∫£n (Soon)</span>
            </div>
          </div>

          <div className="modal-content">
            {renderContent()}
          </div>
        </div>
      </div>
    </div>
  );
}

export default CreditModal;
